name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        run: |
          COMPOSE_BAKE=true make build
          COMPOSE_BAKE=true docker compose --profile test build
          COMPOSE_BAKE=true docker compose --profile dev build

      - name: Save Docker images
        run: |
          docker save incident-io-mcp-server-test > test-image.tar
          docker save incident-io-mcp-server-mcp-server > mcp-server-image.tar

      - name: Upload Docker images
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            test-image.tar
            mcp-server-image.tar
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker images
        run: |
          docker load < test-image.tar
          docker load < mcp-server-image.tar

      - name: Run linting with flake8
        run: |
          make lint

      - name: Run type checking with mypy
        run: |
          make typecheck

      - name: Run tests with pytest
        run: |
          make test
        env:
          INCIDENT_IO_API_KEY: test-key-for-ci

  security:
    runs-on: ubuntu-latest
    needs: build
    continue-on-error: false

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Download Docker images
        uses: actions/download-artifact@v4
        with:
          name: docker-images

      - name: Load Docker images
        run: |
          docker load < test-image.tar
          docker load < mcp-server-image.tar

      - name: Run security checks
        run: |
          make security

